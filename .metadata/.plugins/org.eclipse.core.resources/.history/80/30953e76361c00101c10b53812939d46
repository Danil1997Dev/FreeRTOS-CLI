/*
 * app_cli.h
 *
 *  Created on: Mar 23, 2025
 *      Author: user
 */

#ifndef INC_APP_CLI_H_
#define INC_APP_CLI_H_

#include "stdint.h"
#include "main.h"
#include "FreeRTOS.h"
#include "task.h"
#include "FreeRTOS_CLI.h"
#include "stdbool.h"
#include "string.h"
#include "stdio.h"
#include "stdlib.h"
#include "usart.h"
#include "cmsis_os.h"
#include "semphr.h"
#include "fatfs.h"

#define MAX_INPUT_LENGTH 50
#define USING_VS_CODE_TERMINAL 0
#define USING_OTHER_TERMINAL 1 // e.g. Putty, TerraTerm

typedef struct{
	const char *print_msg;
	uint32_t len;
} msg_t;

extern const CLI_Command_Definition_t xCommandList[];
extern char *remout_ip;
extern uint16_t remout_port;
extern osSemaphoreId_t connectSemHandle;
extern const char * cli_prompt;
extern osSemaphoreId_t fsSemHandle;
extern msg_t msg_struct;
extern osSemaphoreId_t printSemHandle;
extern osThreadId_t vPrintTaskHandle;
extern osThreadId_t vFatFSTaskHandle;
void processRxedChar(uint8_t rxChar);
 void handleCharacterInput(uint8_t *cInputIndex, char *pcInputString);
void vRegisterCLICommands(void);
void vCommandConsoleTask(void *pvParameters);
void cliWrite(const char *str, uint32_t len);
void handleNewline(const char *const pcInputString, char *cOutputBuffer, uint32_t len_out, uint8_t *cInputIndex);
void handleBackspace(uint8_t *cInputIndex, char *pcInputString);

#endif /* INC_APP_CLI_H_ */
